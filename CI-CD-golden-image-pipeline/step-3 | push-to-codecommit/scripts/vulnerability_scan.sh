#!/usr/bin/env bash 
set -e

function num_agents_ready()
{
    local NUM_AGENTS_READY=$(aws inspector preview-agents --preview-agents-arn $ASSESSMENT_TARGET_ARN \
                                | jq -r '.agentPreviews[0].agentHealth' | grep "HEALTHY" | wc -l) 

    echo $NUM_AGENTS_READY
}

function get_active_runs()
{
    local ACTIVE_RUNS=$(aws inspector list-assessment-runs --assessment-template-arns $ASSESSMENT_TEMPLATE_ARN \
                --filter states=CREATED,START_DATA_COLLECTION_PENDING,START_DATA_COLLECTION_IN_PROGRESS,COLLECTING_DATA,STOP_DATA_COLLECTION_PENDING,DATA_COLLECTED,START_EVALUATING_RULES_PENDING,EVALUATING_RULES \
                | jq '.assessmentRunArns | length')
    echo $ACTIVE_RUNS
}

function get_run_status()
{
   local RUN_STATUS=$(aws inspector describe-assessment-runs --assessment-run-arns $ASSESSMENT_RUN_ARN | jq -r ".assessmentRuns[0].state")
   echo "$RUN_STATUS"
}

function get_report_status()
{
    local REPORT_STATUS=$(  aws inspector get-assessment-report --assessment-run-arn $ASSESSMENT_RUN_ARN --report-file-format PDF \
                            --report-type FINDING | jq -r '.status')
    echo "$REPORT_STATUS"
}

NUM_READY_AGENTS=$(num_agents_ready)
while [[ $NUM_READY_AGENTS -eq 0 ]]; do 

    printf "$(date): Waiting for EC2 inspector agent to be HEALTHY and ready......\n"     
    printf '=%.0s' {1..100};  printf '\n'
    sleep 10

    NUM_READY_AGENTS=$(num_agents_ready)
done

printf "$(date): Checking for pending Assessment runs......\n"
NUM_RUNS=$(get_active_runs)

while [[ $NUM_RUNS -gt 0 ]]; do 
        
    echo "$(date): There are $NUM_RUNS assessments runs for $ASSESSMENT_TEMPLATE_ARN"
    echo "$(date): Waiting for them to complete, or cancel run manually"
    printf '=%.0s' {1..100};  printf '\n'
    sleep 10
    printf "$(date): Checking for pending Assessment runs......\n"
    NUM_RUNS=$(get_active_runs)

done

echo "$(date): Starting New Assessment run........"
ASSESSMENT_RUN_ARN=$(aws inspector start-assessment-run --assessment-template-arn $ASSESSMENT_TEMPLATE_ARN | jq -r '.assessmentRunArn' )
echo "$(date): Started Assessment run: ($ASSESSMENT_RUN_ARN)"
printf '=%.0s' {1..100};  printf '\n'
STATUS=$(get_run_status)

while [[ $STATUS != "COMPLETED" ]]; do

    case "$STATUS" in
        FAILED|ERROR|COMPLETED_WITH_ERRORS)
        echo "$(date): Failure running vulnerability scan"
        exit 1
        ;;

        CANCELED)
        echo "$(date): Vulnerability scan Cancelled"
        exit 1
        ;;

        *)
        ;;
    esac

    echo "$(date): AWS Inspector scan status: $(get_run_status)"
    printf '=%.0s' {1..100};  printf '\n'
    sleep 20
    STATUS=$(get_run_status)

done

echo "$(date): AWS Inspector scan status: $(get_run_status)"
STATUS=$(get_report_status)
printf '=%.0s' {1..100};  printf '\n'

while [[ $STATUS != "COMPLETED" ]]; do
    
    case "$STATUS" in
        FAILED)
        echo "$(date): Failure downloading AWS Inspector report"
        exit 1
        ;;

        *) 
        ;;
    esac

    echo "$(date): AWS Inspector report status: $(get_report_status)"
    printf '=%.0s' {1..100};  printf '\n'
    sleep 10
    STATUS=$(get_report_status)
done

echo "$(date): AWS Inspector report status: $(get_run_status)"

URL=$(aws inspector get-assessment-report --assessment-run-arn $ASSESSMENT_RUN_ARN --report-file-format PDF \
      --report-type FINDING | jq -r '.url')
echo -e "\n$(date): Downloading findings report.......\n"
wget -q "$URL" -O "inspector_findings_report.pdf"
# wget "$URL" -O "finding_report-$(date +%m-%d-%Y-%T).pdf"

